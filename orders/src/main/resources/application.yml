spring:
  application:
  name: orders
  config:
    import: "optional:classpath:.env"
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_ORDERS}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  output:
    ansi:
      enabled: ALWAYS
  messages:
    basename: messages
    encoding: UTF-8
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}

server:
  port: ${SERVER_PORT}

market-sphere:
  feign:
    clients:
      products:
        base-url: http://${PRODUCTS_CLIENT_HOST}:${PRODUCTS_CLIENT_PORT}/products
      customers:
        base-url: http://${CUSTOMERS_CLIENT_HOST}:${CUSTOMERS_CLIENT_PORT}/customers
    configs:
      connect-timeout: 5000
      read-timeout: 5000
  config:
    kafka:
      topics:
        paid-orders: ${KAFKA_TOPIC_PAID_ORDERS}
        billed-orders: ${KAFKA_TOPIC_BILLED_ORDERS}
        shipped-orders: ${KAFKA_TOPIC_SHIPPED_ORDERS}